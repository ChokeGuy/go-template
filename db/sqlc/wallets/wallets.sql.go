// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: wallets.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const getWalletByUserId = `-- name: GetWalletByUserId :one
SELECT wallet_id,user_id, created_at, updated_at FROM wallets WHERE user_id = $1
`

type GetWalletByUserIdRow struct {
	WalletID  uuid.UUID          `json:"wallet_id"`
	UserID    uuid.UUID          `json:"user_id"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

func (q *Queries) GetWalletByUserId(ctx context.Context, userID uuid.UUID) (GetWalletByUserIdRow, error) {
	row := q.db.QueryRow(ctx, getWalletByUserId, userID)
	var i GetWalletByUserIdRow
	err := row.Scan(
		&i.WalletID,
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
